globals:
    responses:
        "*":
            401:
                title: Not Authorized
                description: No Authorization header was included with this request
                body:
                    lang: JSON
                    content: {"error": "not_authorized"}
        POST:
            400:
                title: Bad Request
                description: Request data is malformed or data is missing
                body:
                    lang: JSON
                    content: {"error": "bad_request"}

    request_headers:
        "*":
            - name: Authorization
              value: Basic or Bearer authorization
              required: true

vars:
    post:
        create_user:
            lang: JSON
            content:
                {
                    "email": "unused email to register",
                    "nick": "unused nick to register",
                    "password": "passowrd to bind to this account"
                }

        login:
            lang: JSON
            content:
                {
                    "email": "email of this account",
                    "password": "password to this account",
                    "secret": "or the secret produced by the server on last login"
                }

        create_content:
            lang: JSON
            content:
                {
                    "mime": "content mime type",
                    "nsfw": "is this content not safe for work?",
                    "featurable": "may this content be featured?",
                    "tags": ["list", "of", "tags"]
                }

    body:
        user_create:
            lang: JSON
            content: {"user": "created"}

        report:
            lang: JSON
            content: {"reason": "report reason"}

        forbidden:
            lang: JSON
            content: {"error": "forbidden"}

    response:
        user_info:
            title: User information
            description: This user was found and their basic profile was returned
            body:
                lang: JSON
                content:
                    {
                        "user": {
                            "id": "user's UUIDv4",
                            "nick": "user's nickname",
                            "bio": "bio (or, about) section",
                            "subscriber_count": "number of users subscribed to this user",
                            "subscription_count": "number of users this user has subscribed to",
                            "post_count": "number of posts and reposts on this user's timeline",
                            "created": "unix creation timestamp"
                        }
                    }

        no_such_user:
                title: No such user
                description: A user of this id does not exist
                body:
                    lang: JSON
                    content: {"error": "no_such_user"}

        content_info:
            title: Content information
            description: This content was found and its basic information was returned
            body:
                lang: JSON
                content: {
                        "content": {
                                "id": "content id",
                                "author": "author user id",
                                "tags": "content tags",
                                "mime": "content mimetype",
                                "like_count": "number of likes on this content",
                                "dislike_count": "number of dislikes on this content",
                                "repub_count": "number of repubs on this content",
                                "view_count": "number of views on this content",
                                "comment_count": "number of comments on this content",
                                "created": "creation timestamp",
                                "featured": "is this content featured?",
                                "featurable": "may this content be featured?",
                                "removed": "was this content removed?"
                            }
                    }

        no_such_content:
            title: No such content
            description: Content of this id does not exist
            body:
                lang: JSON
                content: {"error": "no_such_content"}

        login:
            title: Sucessful login
            description: The information provided was correct a login token and new secret was produced
            body:
                lang: JSON
                content:
                    {
                        "auth": {
                            "token": "Bearer token to be used in headers for authentication dependant requests",
                            "expires": "expiry timestamp of this token",
                            "secret": "secret to be used for logging in so that a password is not stored"
                            }
                    }

        check:
            title: Resource availability was checked
            description: Information about the queried resource was returned
            body:
                lang: JSON
                content:
                    {
                        "exists": "does this resurce already exist bound to some user?"
                    }

        create_content:
            title: Content was accepted
            description: The uploaded media was accepted and is being uploaded. Returned id may not yet be live
            body:
                lang: JSON
                content:
                    {
                        "content": {
                                "id": "id of the created content"
                            }
                    }

        banned:
            title: Content was rejected
            description: The uploaded content was rejected because this user is banned from content creation
            body:
                lang: JSON
                content: {"error": "forbidden"}

        accepted:
            title: Accepted
            description: The sent content was accepted and processed

        feed:
            title: Content feed
            description: A paginated slice of this feed
            body:
                lang: JSON
                content: {
                        "content": [{
                                "id": "content id",
                                "author": "author user id",
                                "tags": "content tags",
                                "mime": "content mimetype",
                                "like_count": "number of likes on this content",
                                "dislike_count": "number of dislikes on this content",
                                "repub_count": "number of repubs on this content",
                                "view_count": "number of views on this content",
                                "comment_count": "number of comments on this content",
                                "created": "creation timestamp",
                                "featured": "is this content featured?",
                                "featurable": "may this content be featured?",
                                "removed": "was this content removed?"
                            }, ...]
                    }

        bad_request:
            title: Bad Request
            description: Request data is malformed or data is missing
            body:
                lang: JSON
                content: {"error": "bad_request"}

        bad_media:
            title: Unsupported Media
            description: mimetype provided is not a supported upload type
            body:
                lang: JSON
                content: {"error": "bad_media"}

    header:
        auth:
            name: Authorization
            value: Basic or Bearer authorization
            required: true

    query_string:
        size:
            name: size
            description: Number of items to fetch
            default: 50
            required: false
        offset:
            name: offset
            description: paginated index offset
            default: 0
            required: false

routes:
    /user/:
        POST:
            description: Create a new user
            body: $post.create_user
            responses:
                200:
                    title: Account Created
                    description: This account was created
                    body: $body.user_create
                403:
                    title: Forbidden
                    description: This device or ip address/range may not create users
                    body: $body.forbidden
                409:
                    title: Conflict
                    description: The requested nick or email is already in use
                    body:
                        lang: JSON
                        content: {"error": "<value>_conflict"}

    /user/:id/:
        GET:
            description: Get information about some user by their id
            responses:
                200: $response.user_info
                404: $response.no_such_user

    /user/:id/reports/:
        PUT:
            description: Report a usre for some reason
            body: $body.report
            responses:
                204: $response.accepted
                404: $response.no_such_user

    /user/nick/:nick:
        GET:
            description: Get information about some user by their nick
            responses:
                200: $response.user_info
                404: $response.no_such_user

    /auth/:
        POST:
            description: Log in with an email/password, or an email/secret
            body: $post.login
            responses:
                200: $response.login

    /check/nick/:nick/:
        GET:
            description: Check a nickname for availability
            responses:
                200: $response.check

    /check/email/:email/:
        GET:
            description: Check an email for availability
            responses:
                200: $response.check

    /content/:
        POST:
            description: Upload some image or video content. This should be a multipart POST with JSON data in part json, and the file upload in part file
            body: $post.create_content
            responses:
                200: $response.create_content
                400:
                    title: $response.bad_request.title
                    description: Request data is malformed, data is missing, or the uploaded media does not match given mime
                    body: $response.bad_request.body
                403: $response.banned
                415: $response.bad_media

    /content/:id/:
        GET:
            description: Get basic information about some content its id
            responses:
                200: $response.content_info
                404: $response.no_such_content

    /feed/all/:
        GET:
            description: Get a paginated slice of the all feed
            query_strings:
                - $query_string.size
                - $query_string.offset
            responses:
                200: $response.feed
